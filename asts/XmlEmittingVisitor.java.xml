<?xml version="1.0" encoding="UTF-8"?><CompilationUnit><Comment type="COMMENT">/*
 *  JavaSharp, a free Java to C# translator based on ANTLRv4
 *  Copyright (C) 2014  Philip van Oosten
 * 
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Affero General Public License as
 *  published by the Free Software Foundation, either version 3 of the
 *  License, or (at your option) any later version.
 * 
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Affero General Public License for more details.
 * 
 *  You should have received a copy of the GNU Affero General Public License
 *  along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.
 * 
 *  https://github.com/pvoosten
 */</Comment>
<PackageDeclaration><Symbol type="PACKAGE">package</Symbol> <QualifiedName><Symbol type="Identifier">javasharp</Symbol></QualifiedName><Symbol type="SEMI">;</Symbol></PackageDeclaration>

<ImportDeclaration><Symbol type="IMPORT">import</Symbol> <QualifiedName><Symbol type="Identifier">java</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">util</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">List</Symbol></QualifiedName><Symbol type="SEMI">;</Symbol></ImportDeclaration>
<ImportDeclaration><Symbol type="IMPORT">import</Symbol> <QualifiedName><Symbol type="Identifier">java</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">util</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">logging</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">Level</Symbol></QualifiedName><Symbol type="SEMI">;</Symbol></ImportDeclaration>
<ImportDeclaration><Symbol type="IMPORT">import</Symbol> <QualifiedName><Symbol type="Identifier">java</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">util</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">logging</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">Logger</Symbol></QualifiedName><Symbol type="SEMI">;</Symbol></ImportDeclaration>
<ImportDeclaration><Symbol type="IMPORT">import</Symbol> <QualifiedName><Symbol type="Identifier">org</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">antlr</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">v4</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">runtime</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">BufferedTokenStream</Symbol></QualifiedName><Symbol type="SEMI">;</Symbol></ImportDeclaration>
<ImportDeclaration><Symbol type="IMPORT">import</Symbol> <QualifiedName><Symbol type="Identifier">org</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">antlr</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">v4</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">runtime</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">ParserRuleContext</Symbol></QualifiedName><Symbol type="SEMI">;</Symbol></ImportDeclaration>
<ImportDeclaration><Symbol type="IMPORT">import</Symbol> <QualifiedName><Symbol type="Identifier">org</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">antlr</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">v4</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">runtime</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">Token</Symbol></QualifiedName><Symbol type="SEMI">;</Symbol></ImportDeclaration>
<ImportDeclaration><Symbol type="IMPORT">import</Symbol> <QualifiedName><Symbol type="Identifier">org</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">antlr</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">v4</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">runtime</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">TokenSource</Symbol></QualifiedName><Symbol type="SEMI">;</Symbol></ImportDeclaration>
<ImportDeclaration><Symbol type="IMPORT">import</Symbol> <QualifiedName><Symbol type="Identifier">org</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">antlr</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">v4</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">runtime</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">tree</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">AbstractParseTreeVisitor</Symbol></QualifiedName><Symbol type="SEMI">;</Symbol></ImportDeclaration>
<ImportDeclaration><Symbol type="IMPORT">import</Symbol> <QualifiedName><Symbol type="Identifier">org</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">antlr</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">v4</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">runtime</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">tree</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">TerminalNode</Symbol></QualifiedName><Symbol type="SEMI">;</Symbol></ImportDeclaration>
<ImportDeclaration><Symbol type="IMPORT">import</Symbol> <QualifiedName><Symbol type="Identifier">org</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">xml</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">sax</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">Attributes</Symbol></QualifiedName><Symbol type="SEMI">;</Symbol></ImportDeclaration>
<ImportDeclaration><Symbol type="IMPORT">import</Symbol> <QualifiedName><Symbol type="Identifier">org</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">xml</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">sax</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">ContentHandler</Symbol></QualifiedName><Symbol type="SEMI">;</Symbol></ImportDeclaration>
<ImportDeclaration><Symbol type="IMPORT">import</Symbol> <QualifiedName><Symbol type="Identifier">org</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">xml</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">sax</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">SAXException</Symbol></QualifiedName><Symbol type="SEMI">;</Symbol></ImportDeclaration>
<ImportDeclaration><Symbol type="IMPORT">import</Symbol> <QualifiedName><Symbol type="Identifier">org</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">xml</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">sax</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">helpers</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">AttributesImpl</Symbol></QualifiedName><Symbol type="SEMI">;</Symbol></ImportDeclaration>

<TypeDeclaration><ClassDeclaration><Symbol type="CLASS">class</Symbol> <Symbol type="Identifier">XmlEmittingVisitor</Symbol> <Symbol type="EXTENDS">extends</Symbol> <Type><ClassOrInterfaceType><Symbol type="Identifier">AbstractParseTreeVisitor</Symbol><TypeArguments><Symbol type="LT">&lt;</Symbol><TypeArgument><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type></TypeArgument><Symbol type="GT">&gt;</Symbol></TypeArguments></ClassOrInterfaceType></Type> <Symbol type="IMPLEMENTS">implements</Symbol> <TypeList><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaVisitor</Symbol><TypeArguments><Symbol type="LT">&lt;</Symbol><TypeArgument><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type></TypeArgument><Symbol type="GT">&gt;</Symbol></TypeArguments></ClassOrInterfaceType></Type></TypeList> <ClassBody><Symbol type="LBRACE">{</Symbol>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Symbol type="PRIVATE">private</Symbol></ClassOrInterfaceModifier></Modifier> <Modifier><ClassOrInterfaceModifier><Symbol type="FINAL">final</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><FieldDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">BufferedTokenStream</Symbol></ClassOrInterfaceType></Type> <VariableDeclarators><VariableDeclarator><VariableDeclaratorId><Symbol type="Identifier">bufferedTokenStream</Symbol></VariableDeclaratorId></VariableDeclarator></VariableDeclarators><Symbol type="SEMI">;</Symbol></FieldDeclaration></MemberDeclaration></ClassBodyDeclaration>
    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Symbol type="PRIVATE">private</Symbol></ClassOrInterfaceModifier></Modifier> <Modifier><ClassOrInterfaceModifier><Symbol type="FINAL">final</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><FieldDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">ContentHandler</Symbol></ClassOrInterfaceType></Type> <VariableDeclarators><VariableDeclarator><VariableDeclaratorId><Symbol type="Identifier">contentHandler</Symbol></VariableDeclaratorId></VariableDeclarator></VariableDeclarators><Symbol type="SEMI">;</Symbol></FieldDeclaration></MemberDeclaration></ClassBodyDeclaration>
    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Symbol type="PRIVATE">private</Symbol></ClassOrInterfaceModifier></Modifier> <Modifier><ClassOrInterfaceModifier><Symbol type="STATIC">static</Symbol></ClassOrInterfaceModifier></Modifier> <Modifier><ClassOrInterfaceModifier><Symbol type="FINAL">final</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><FieldDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Attributes</Symbol></ClassOrInterfaceType></Type> <VariableDeclarators><VariableDeclarator><VariableDeclaratorId><Symbol type="Identifier">noAtts</Symbol></VariableDeclaratorId> <Symbol type="ASSIGN">=</Symbol> <VariableInitializer><Expression><Symbol type="NEW">new</Symbol> <Creator><CreatedName><Symbol type="Identifier">AttributesImpl</Symbol></CreatedName><ClassCreatorRest><Arguments><Symbol type="LPAREN">(</Symbol><Symbol type="RPAREN">)</Symbol></Arguments></ClassCreatorRest></Creator></Expression></VariableInitializer></VariableDeclarator></VariableDeclarators><Symbol type="SEMI">;</Symbol></FieldDeclaration></MemberDeclaration></ClassBodyDeclaration>
    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Symbol type="PRIVATE">private</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><FieldDeclaration><Type><PrimitiveType><Symbol type="INT">int</Symbol></PrimitiveType></Type> <VariableDeclarators><VariableDeclarator><VariableDeclaratorId><Symbol type="Identifier">cursor</Symbol></VariableDeclaratorId></VariableDeclarator></VariableDeclarators><Symbol type="SEMI">;</Symbol></FieldDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><MemberDeclaration><ConstructorDeclaration><Symbol type="Identifier">XmlEmittingVisitor</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">ContentHandler</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">contentHandler</Symbol></VariableDeclaratorId></FormalParameter><Symbol type="COMMA">,</Symbol> <FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">BufferedTokenStream</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">bufferedTokenStream</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <ConstructorBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><StatementExpression><Expression><Expression><Expression><Primary><Symbol type="THIS">this</Symbol></Primary></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">contentHandler</Symbol></Expression> <Symbol type="ASSIGN">=</Symbol> <Expression><Primary><Symbol type="Identifier">contentHandler</Symbol></Primary></Expression></Expression></StatementExpression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
        <BlockStatement><Statement><StatementExpression><Expression><Expression><Expression><Primary><Symbol type="THIS">this</Symbol></Primary></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">bufferedTokenStream</Symbol></Expression> <Symbol type="ASSIGN">=</Symbol> <Expression><Primary><Symbol type="Identifier">bufferedTokenStream</Symbol></Primary></Expression></Expression></StatementExpression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
        <BlockStatement><Statement><StatementExpression><Expression><Expression><Primary><Symbol type="Identifier">cursor</Symbol></Primary></Expression> <Symbol type="ASSIGN">=</Symbol> <Expression><Symbol type="SUB">-</Symbol><Expression><Primary><Literal><Symbol type="IntegerLiteral">1</Symbol></Literal></Primary></Expression></Expression></Expression></StatementExpression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></ConstructorBody></ConstructorDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Symbol type="PRIVATE">private</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">emitXmlElement</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">String</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">elementName</Symbol></VariableDeclaratorId></FormalParameter><Symbol type="COMMA">,</Symbol> <FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">ParserRuleContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <Symbol type="THROWS">throws</Symbol> <QualifiedNameList><QualifiedName><Symbol type="Identifier">RuntimeException</Symbol></QualifiedName></QualifiedNameList> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="TRY">try</Symbol> <Block><Symbol type="LBRACE">{</Symbol>
            <BlockStatement><LocalVariableDeclarationStatement><LocalVariableDeclaration><Type><PrimitiveType><Symbol type="INT">int</Symbol></PrimitiveType></Type> <VariableDeclarators><VariableDeclarator><VariableDeclaratorId><Symbol type="Identifier">tokenIndex</Symbol></VariableDeclaratorId> <Symbol type="ASSIGN">=</Symbol> <VariableInitializer><Expression><Expression><Expression><Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">start</Symbol></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">getTokenIndex</Symbol></Expression><Symbol type="LPAREN">(</Symbol><Symbol type="RPAREN">)</Symbol></Expression></VariableInitializer></VariableDeclarator></VariableDeclarators></LocalVariableDeclaration><Symbol type="SEMI">;</Symbol></LocalVariableDeclarationStatement></BlockStatement>
            <BlockStatement><Statement><StatementExpression><Expression><Expression><Primary><Symbol type="Identifier">emitWhiteSpace</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Symbol type="Identifier">tokenIndex</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression></StatementExpression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
            <BlockStatement><Statement><StatementExpression><Expression><Expression><Expression><Primary><Symbol type="Identifier">contentHandler</Symbol></Primary></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">startElement</Symbol></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">""</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">elementName</Symbol></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">elementName</Symbol></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">noAtts</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression></StatementExpression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
            <BlockStatement><Statement><StatementExpression><Expression><Expression><Primary><Symbol type="Identifier">emitComments</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Symbol type="Identifier">tokenIndex</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression></StatementExpression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
            <BlockStatement><Statement><StatementExpression><Expression><Expression><Primary><Symbol type="Identifier">visitChildren</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression></StatementExpression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
            <BlockStatement><Statement><StatementExpression><Expression><Expression><Expression><Primary><Symbol type="Identifier">contentHandler</Symbol></Primary></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">endElement</Symbol></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">""</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">elementName</Symbol></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">elementName</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression></StatementExpression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
        <Symbol type="RBRACE">}</Symbol></Block> <CatchClause><Symbol type="CATCH">catch</Symbol> <Symbol type="LPAREN">(</Symbol><CatchType><QualifiedName><Symbol type="Identifier">SAXException</Symbol></QualifiedName></CatchType> <Symbol type="Identifier">ex</Symbol><Symbol type="RPAREN">)</Symbol> <Block><Symbol type="LBRACE">{</Symbol>
            <BlockStatement><Statement><StatementExpression><Expression><Expression><Expression><Expression><Expression><Primary><Symbol type="Identifier">Logger</Symbol></Primary></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">getLogger</Symbol></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Expression><Expression><Primary><Type><ClassOrInterfaceType><Symbol type="Identifier">XmlEmittingVisitor</Symbol></ClassOrInterfaceType></Type><Symbol type="DOT">.</Symbol><Symbol type="CLASS">class</Symbol></Primary></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">getName</Symbol></Expression><Symbol type="LPAREN">(</Symbol><Symbol type="RPAREN">)</Symbol></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">log</Symbol></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Expression><Primary><Symbol type="Identifier">Level</Symbol></Primary></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">SEVERE</Symbol></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Literal><Symbol type="NullLiteral">null</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ex</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression></StatementExpression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
            <BlockStatement><Statement><Symbol type="THROW">throw</Symbol> <Expression><Symbol type="NEW">new</Symbol> <Creator><CreatedName><Symbol type="Identifier">RuntimeException</Symbol></CreatedName><ClassCreatorRest><Arguments><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Symbol type="Identifier">ex</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Arguments></ClassCreatorRest></Creator></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
        <Symbol type="RBRACE">}</Symbol></Block></CatchClause></Statement></BlockStatement>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Primary><Literal><Symbol type="NullLiteral">null</Symbol></Literal></Primary></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Symbol type="PRIVATE">private</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Symbol type="VOID">void</Symbol> <Symbol type="Identifier">emitWhiteSpace</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><PrimitiveType><Symbol type="INT">int</Symbol></PrimitiveType></Type> <VariableDeclaratorId><Symbol type="Identifier">tokenIndex</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="IF">if</Symbol> <ParExpression><Symbol type="LPAREN">(</Symbol><Expression><Expression><Primary><Symbol type="Identifier">tokenIndex</Symbol></Primary></Expression> <Symbol type="GT">&gt;</Symbol> <Expression><Primary><Symbol type="Identifier">cursor</Symbol></Primary></Expression></Expression><Symbol type="RPAREN">)</Symbol></ParExpression> <Statement><Block><Symbol type="LBRACE">{</Symbol>
            <BlockStatement><LocalVariableDeclarationStatement><LocalVariableDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">List</Symbol><TypeArguments><Symbol type="LT">&lt;</Symbol><TypeArgument><Type><ClassOrInterfaceType><Symbol type="Identifier">Token</Symbol></ClassOrInterfaceType></Type></TypeArgument><Symbol type="GT">&gt;</Symbol></TypeArguments></ClassOrInterfaceType></Type> <VariableDeclarators><VariableDeclarator><VariableDeclaratorId><Symbol type="Identifier">hiddenTokens</Symbol></VariableDeclaratorId> <Symbol type="ASSIGN">=</Symbol> <VariableInitializer><Expression><Expression><Expression><Primary><Symbol type="Identifier">bufferedTokenStream</Symbol></Primary></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">getHiddenTokensToLeft</Symbol></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Symbol type="Identifier">tokenIndex</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression></VariableInitializer></VariableDeclarator></VariableDeclarators></LocalVariableDeclaration><Symbol type="SEMI">;</Symbol></LocalVariableDeclarationStatement></BlockStatement>
            <BlockStatement><Statement><Symbol type="IF">if</Symbol> <ParExpression><Symbol type="LPAREN">(</Symbol><Expression><Expression><Primary><Symbol type="Identifier">hiddenTokens</Symbol></Primary></Expression> <Symbol type="NOTEQUAL">!=</Symbol> <Expression><Primary><Literal><Symbol type="NullLiteral">null</Symbol></Literal></Primary></Expression></Expression><Symbol type="RPAREN">)</Symbol></ParExpression> <Statement><Block><Symbol type="LBRACE">{</Symbol>
                <BlockStatement><Statement><StatementExpression><Expression><Expression><Primary><Symbol type="Identifier">emitWhiteSpace</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Expression><Expression><Primary><Symbol type="Identifier">hiddenTokens</Symbol></Primary></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">get</Symbol></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="IntegerLiteral">0</Symbol></Literal></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression></StatementExpression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
            <Symbol type="RBRACE">}</Symbol></Block></Statement></Statement></BlockStatement>
        <Symbol type="RBRACE">}</Symbol></Block></Statement></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Symbol type="PRIVATE">private</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Symbol type="VOID">void</Symbol> <Symbol type="Identifier">emitComments</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><PrimitiveType><Symbol type="INT">int</Symbol></PrimitiveType></Type> <VariableDeclaratorId><Symbol type="Identifier">tokenIndex</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="IF">if</Symbol> <ParExpression><Symbol type="LPAREN">(</Symbol><Expression><Expression><Primary><Symbol type="Identifier">tokenIndex</Symbol></Primary></Expression> <Symbol type="GT">&gt;</Symbol> <Expression><Primary><Symbol type="Identifier">cursor</Symbol></Primary></Expression></Expression><Symbol type="RPAREN">)</Symbol></ParExpression> <Statement><Block><Symbol type="LBRACE">{</Symbol>
            <BlockStatement><LocalVariableDeclarationStatement><LocalVariableDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">List</Symbol><TypeArguments><Symbol type="LT">&lt;</Symbol><TypeArgument><Type><ClassOrInterfaceType><Symbol type="Identifier">Token</Symbol></ClassOrInterfaceType></Type></TypeArgument><Symbol type="GT">&gt;</Symbol></TypeArguments></ClassOrInterfaceType></Type> <VariableDeclarators><VariableDeclarator><VariableDeclaratorId><Symbol type="Identifier">hiddenTokens</Symbol></VariableDeclaratorId> <Symbol type="ASSIGN">=</Symbol> <VariableInitializer><Expression><Expression><Expression><Primary><Symbol type="Identifier">bufferedTokenStream</Symbol></Primary></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">getHiddenTokensToLeft</Symbol></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Symbol type="Identifier">tokenIndex</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression></VariableInitializer></VariableDeclarator></VariableDeclarators></LocalVariableDeclaration><Symbol type="SEMI">;</Symbol></LocalVariableDeclarationStatement></BlockStatement>
            <BlockStatement><Statement><Symbol type="IF">if</Symbol> <ParExpression><Symbol type="LPAREN">(</Symbol><Expression><Expression><Expression><Primary><Symbol type="Identifier">hiddenTokens</Symbol></Primary></Expression> <Symbol type="NOTEQUAL">!=</Symbol> <Expression><Primary><Literal><Symbol type="NullLiteral">null</Symbol></Literal></Primary></Expression></Expression> <Symbol type="AND">&amp;&amp;</Symbol> <Expression><Primary><Symbol type="LPAREN">(</Symbol><Expression><Expression><Expression><Expression><Primary><Symbol type="Identifier">hiddenTokens</Symbol></Primary></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">size</Symbol></Expression><Symbol type="LPAREN">(</Symbol><Symbol type="RPAREN">)</Symbol></Expression> <Symbol type="GT">&gt;</Symbol> <Expression><Primary><Literal><Symbol type="IntegerLiteral">0</Symbol></Literal></Primary></Expression></Expression><Symbol type="RPAREN">)</Symbol></Primary></Expression></Expression><Symbol type="RPAREN">)</Symbol></ParExpression> <Statement><Block><Symbol type="LBRACE">{</Symbol>
                <BlockStatement><LocalVariableDeclarationStatement><LocalVariableDeclaration><Type><PrimitiveType><Symbol type="INT">int</Symbol></PrimitiveType></Type> <VariableDeclarators><VariableDeclarator><VariableDeclaratorId><Symbol type="Identifier">offset</Symbol></VariableDeclaratorId> <Symbol type="ASSIGN">=</Symbol> <VariableInitializer><Expression><Expression><Expression><Primary><Symbol type="Identifier">cursor</Symbol></Primary></Expression> <Symbol type="SUB">-</Symbol> <Expression><Expression><Expression><Expression><Expression><Primary><Symbol type="Identifier">hiddenTokens</Symbol></Primary></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">get</Symbol></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="IntegerLiteral">0</Symbol></Literal></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">getTokenIndex</Symbol></Expression><Symbol type="LPAREN">(</Symbol><Symbol type="RPAREN">)</Symbol></Expression></Expression> <Symbol type="ADD">+</Symbol> <Expression><Primary><Literal><Symbol type="IntegerLiteral">1</Symbol></Literal></Primary></Expression></Expression></VariableInitializer></VariableDeclarator></VariableDeclarators></LocalVariableDeclaration><Symbol type="SEMI">;</Symbol></LocalVariableDeclarationStatement></BlockStatement>
                <BlockStatement><Statement><Symbol type="FOR">for</Symbol> <Symbol type="LPAREN">(</Symbol><ForControl><ForInit><LocalVariableDeclaration><Type><PrimitiveType><Symbol type="INT">int</Symbol></PrimitiveType></Type> <VariableDeclarators><VariableDeclarator><VariableDeclaratorId><Symbol type="Identifier">i</Symbol></VariableDeclaratorId> <Symbol type="ASSIGN">=</Symbol> <VariableInitializer><Expression><Primary><Symbol type="Identifier">offset</Symbol></Primary></Expression></VariableInitializer></VariableDeclarator></VariableDeclarators></LocalVariableDeclaration></ForInit><Symbol type="SEMI">;</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">i</Symbol></Primary></Expression> <Symbol type="LT">&lt;</Symbol> <Expression><Expression><Expression><Primary><Symbol type="Identifier">hiddenTokens</Symbol></Primary></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">size</Symbol></Expression><Symbol type="LPAREN">(</Symbol><Symbol type="RPAREN">)</Symbol></Expression></Expression><Symbol type="SEMI">;</Symbol> <ForUpdate><ExpressionList><Expression><Expression><Primary><Symbol type="Identifier">i</Symbol></Primary></Expression><Symbol type="INC">++</Symbol></Expression></ExpressionList></ForUpdate></ForControl><Symbol type="RPAREN">)</Symbol> <Statement><Block><Symbol type="LBRACE">{</Symbol>
                    <BlockStatement><LocalVariableDeclarationStatement><LocalVariableDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Token</Symbol></ClassOrInterfaceType></Type> <VariableDeclarators><VariableDeclarator><VariableDeclaratorId><Symbol type="Identifier">t</Symbol></VariableDeclaratorId> <Symbol type="ASSIGN">=</Symbol> <VariableInitializer><Expression><Expression><Expression><Primary><Symbol type="Identifier">hiddenTokens</Symbol></Primary></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">get</Symbol></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Symbol type="Identifier">i</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression></VariableInitializer></VariableDeclarator></VariableDeclarators></LocalVariableDeclaration><Symbol type="SEMI">;</Symbol></LocalVariableDeclarationStatement></BlockStatement>
                    <BlockStatement><Statement><Symbol type="IF">if</Symbol> <ParExpression><Symbol type="LPAREN">(</Symbol><Expression><Expression><Expression><Expression><Primary><Symbol type="Identifier">t</Symbol></Primary></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">getType</Symbol></Expression><Symbol type="LPAREN">(</Symbol><Symbol type="RPAREN">)</Symbol></Expression> <Symbol type="EQUAL">==</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">JavaLexer</Symbol></Primary></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">COMMENT</Symbol></Expression></Expression><Symbol type="RPAREN">)</Symbol></ParExpression> <Statement><Block><Symbol type="LBRACE">{</Symbol>
                        <BlockStatement><Statement><StatementExpression><Expression><Expression><Primary><Symbol type="Identifier">emitToken</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"Comment"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">t</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression></StatementExpression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
                    <Symbol type="RBRACE">}</Symbol></Block></Statement> <Symbol type="ELSE">else</Symbol> <Statement><Symbol type="IF">if</Symbol> <ParExpression><Symbol type="LPAREN">(</Symbol><Expression><Expression><Expression><Expression><Primary><Symbol type="Identifier">t</Symbol></Primary></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">getType</Symbol></Expression><Symbol type="LPAREN">(</Symbol><Symbol type="RPAREN">)</Symbol></Expression> <Symbol type="EQUAL">==</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">JavaLexer</Symbol></Primary></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">LINE_COMMENT</Symbol></Expression></Expression><Symbol type="RPAREN">)</Symbol></ParExpression> <Statement><Block><Symbol type="LBRACE">{</Symbol>
                        <BlockStatement><Statement><StatementExpression><Expression><Expression><Primary><Symbol type="Identifier">emitToken</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"LineComment"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">t</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression></StatementExpression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
                    <Symbol type="RBRACE">}</Symbol></Block></Statement> <Symbol type="ELSE">else</Symbol> <Statement><Block><Symbol type="LBRACE">{</Symbol>
                        <BlockStatement><Statement><StatementExpression><Expression><Expression><Primary><Symbol type="Identifier">emitWhiteSpace</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Symbol type="Identifier">t</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression></StatementExpression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
                    <Symbol type="RBRACE">}</Symbol></Block></Statement></Statement></Statement></BlockStatement>
                <Symbol type="RBRACE">}</Symbol></Block></Statement></Statement></BlockStatement>
            <Symbol type="RBRACE">}</Symbol></Block></Statement></Statement></BlockStatement>
            <BlockStatement><Statement><StatementExpression><Expression><Expression><Primary><Symbol type="Identifier">cursor</Symbol></Primary></Expression> <Symbol type="ASSIGN">=</Symbol> <Expression><Primary><Symbol type="Identifier">tokenIndex</Symbol></Primary></Expression></Expression></StatementExpression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
        <Symbol type="RBRACE">}</Symbol></Block></Statement></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Symbol type="PRIVATE">private</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Symbol type="VOID">void</Symbol> <Symbol type="Identifier">emitWhiteSpace</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">Token</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">t</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><LocalVariableDeclarationStatement><LocalVariableDeclaration><Type><PrimitiveType><Symbol type="INT">int</Symbol></PrimitiveType></Type> <VariableDeclarators><VariableDeclarator><VariableDeclaratorId><Symbol type="Identifier">tokenIndex</Symbol></VariableDeclaratorId> <Symbol type="ASSIGN">=</Symbol> <VariableInitializer><Expression><Expression><Expression><Primary><Symbol type="Identifier">t</Symbol></Primary></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">getTokenIndex</Symbol></Expression><Symbol type="LPAREN">(</Symbol><Symbol type="RPAREN">)</Symbol></Expression></VariableInitializer></VariableDeclarator></VariableDeclarators></LocalVariableDeclaration><Symbol type="SEMI">;</Symbol></LocalVariableDeclarationStatement></BlockStatement>
        <BlockStatement><Statement><Symbol type="IF">if</Symbol> <ParExpression><Symbol type="LPAREN">(</Symbol><Expression><Expression><Expression><Primary><Symbol type="Identifier">tokenIndex</Symbol></Primary></Expression> <Symbol type="GT">&gt;</Symbol> <Expression><Primary><Symbol type="Identifier">cursor</Symbol></Primary></Expression></Expression> <Symbol type="AND">&amp;&amp;</Symbol> <Expression><Expression><Expression><Expression><Primary><Symbol type="Identifier">t</Symbol></Primary></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">getType</Symbol></Expression><Symbol type="LPAREN">(</Symbol><Symbol type="RPAREN">)</Symbol></Expression> <Symbol type="EQUAL">==</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">JavaLexer</Symbol></Primary></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">WS</Symbol></Expression></Expression></Expression><Symbol type="RPAREN">)</Symbol></ParExpression> <Statement><Block><Symbol type="LBRACE">{</Symbol>
            <BlockStatement><LocalVariableDeclarationStatement><LocalVariableDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">String</Symbol></ClassOrInterfaceType></Type> <VariableDeclarators><VariableDeclarator><VariableDeclaratorId><Symbol type="Identifier">ws</Symbol></VariableDeclaratorId> <Symbol type="ASSIGN">=</Symbol> <VariableInitializer><Expression><Expression><Expression><Expression><Expression><Primary><Symbol type="Identifier">t</Symbol></Primary></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">getText</Symbol></Expression><Symbol type="LPAREN">(</Symbol><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">replaceAll</Symbol></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"\r\n"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Literal><Symbol type="StringLiteral">"\n"</Symbol></Literal></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression></VariableInitializer></VariableDeclarator></VariableDeclarators></LocalVariableDeclaration><Symbol type="SEMI">;</Symbol></LocalVariableDeclarationStatement></BlockStatement>
            <BlockStatement><Statement><Symbol type="TRY">try</Symbol> <Block><Symbol type="LBRACE">{</Symbol>
                <BlockStatement><Statement><StatementExpression><Expression><Expression><Expression><Primary><Symbol type="Identifier">contentHandler</Symbol></Primary></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">characters</Symbol></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Expression><Expression><Primary><Symbol type="Identifier">ws</Symbol></Primary></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">toCharArray</Symbol></Expression><Symbol type="LPAREN">(</Symbol><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Literal><Symbol type="IntegerLiteral">0</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Expression><Expression><Primary><Symbol type="Identifier">ws</Symbol></Primary></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">length</Symbol></Expression><Symbol type="LPAREN">(</Symbol><Symbol type="RPAREN">)</Symbol></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression></StatementExpression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
            <Symbol type="RBRACE">}</Symbol></Block> <CatchClause><Symbol type="CATCH">catch</Symbol> <Symbol type="LPAREN">(</Symbol><CatchType><QualifiedName><Symbol type="Identifier">SAXException</Symbol></QualifiedName></CatchType> <Symbol type="Identifier">ex</Symbol><Symbol type="RPAREN">)</Symbol> <Block><Symbol type="LBRACE">{</Symbol>
                <BlockStatement><Statement><StatementExpression><Expression><Expression><Expression><Expression><Expression><Primary><Symbol type="Identifier">Logger</Symbol></Primary></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">getLogger</Symbol></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Expression><Expression><Primary><Type><ClassOrInterfaceType><Symbol type="Identifier">XmlEmittingVisitor</Symbol></ClassOrInterfaceType></Type><Symbol type="DOT">.</Symbol><Symbol type="CLASS">class</Symbol></Primary></Expression>
                        <Symbol type="DOT">.</Symbol><Symbol type="Identifier">getName</Symbol></Expression><Symbol type="LPAREN">(</Symbol><Symbol type="RPAREN">)</Symbol></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">log</Symbol></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Expression><Primary><Symbol type="Identifier">Level</Symbol></Primary></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">SEVERE</Symbol></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Literal><Symbol type="NullLiteral">null</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ex</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression></StatementExpression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
            <Symbol type="RBRACE">}</Symbol></Block></CatchClause></Statement></BlockStatement>
            <BlockStatement><Statement><StatementExpression><Expression><Expression><Primary><Symbol type="Identifier">cursor</Symbol></Primary></Expression> <Symbol type="ASSIGN">=</Symbol> <Expression><Expression><Expression><Primary><Symbol type="Identifier">t</Symbol></Primary></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">getTokenIndex</Symbol></Expression><Symbol type="LPAREN">(</Symbol><Symbol type="RPAREN">)</Symbol></Expression></Expression></StatementExpression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
        <Symbol type="RBRACE">}</Symbol></Block></Statement></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><MemberDeclaration><MethodDeclaration><Symbol type="VOID">void</Symbol> <Symbol type="Identifier">emitToken</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">String</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">elementName</Symbol></VariableDeclaratorId></FormalParameter><Symbol type="COMMA">,</Symbol> <FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">Token</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">token</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><LocalVariableDeclarationStatement><LocalVariableDeclaration><Type><PrimitiveType><Symbol type="INT">int</Symbol></PrimitiveType></Type> <VariableDeclarators><VariableDeclarator><VariableDeclaratorId><Symbol type="Identifier">tokenIndex</Symbol></VariableDeclaratorId> <Symbol type="ASSIGN">=</Symbol> <VariableInitializer><Expression><Expression><Expression><Primary><Symbol type="Identifier">token</Symbol></Primary></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">getTokenIndex</Symbol></Expression><Symbol type="LPAREN">(</Symbol><Symbol type="RPAREN">)</Symbol></Expression></VariableInitializer></VariableDeclarator></VariableDeclarators></LocalVariableDeclaration><Symbol type="SEMI">;</Symbol></LocalVariableDeclarationStatement></BlockStatement>
        <BlockStatement><Statement><Symbol type="ASSERT">assert</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">tokenIndex</Symbol></Primary></Expression> <Symbol type="GT">&gt;</Symbol> <Expression><Primary><Symbol type="Identifier">cursor</Symbol></Primary></Expression></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
        <BlockStatement><LocalVariableDeclarationStatement><LocalVariableDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">String</Symbol></ClassOrInterfaceType></Type> <VariableDeclarators><VariableDeclarator><VariableDeclaratorId><Symbol type="Identifier">tokenText</Symbol></VariableDeclaratorId> <Symbol type="ASSIGN">=</Symbol> <VariableInitializer><Expression><Expression><Expression><Expression><Expression><Primary><Symbol type="Identifier">token</Symbol></Primary></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">getText</Symbol></Expression><Symbol type="LPAREN">(</Symbol><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">replaceAll</Symbol></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"\r\n"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Literal><Symbol type="StringLiteral">"\n"</Symbol></Literal></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression></VariableInitializer></VariableDeclarator></VariableDeclarators></LocalVariableDeclaration><Symbol type="SEMI">;</Symbol></LocalVariableDeclarationStatement></BlockStatement>
        <BlockStatement><Statement><Symbol type="TRY">try</Symbol> <Block><Symbol type="LBRACE">{</Symbol>
            <BlockStatement><LocalVariableDeclarationStatement><LocalVariableDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">AttributesImpl</Symbol></ClassOrInterfaceType></Type> <VariableDeclarators><VariableDeclarator><VariableDeclaratorId><Symbol type="Identifier">atts</Symbol></VariableDeclaratorId> <Symbol type="ASSIGN">=</Symbol> <VariableInitializer><Expression><Symbol type="NEW">new</Symbol> <Creator><CreatedName><Symbol type="Identifier">AttributesImpl</Symbol></CreatedName><ClassCreatorRest><Arguments><Symbol type="LPAREN">(</Symbol><Symbol type="RPAREN">)</Symbol></Arguments></ClassCreatorRest></Creator></Expression></VariableInitializer></VariableDeclarator></VariableDeclarators></LocalVariableDeclaration><Symbol type="SEMI">;</Symbol></LocalVariableDeclarationStatement></BlockStatement>
            <BlockStatement><LocalVariableDeclarationStatement><LocalVariableDeclaration><Type><PrimitiveType><Symbol type="INT">int</Symbol></PrimitiveType></Type> <VariableDeclarators><VariableDeclarator><VariableDeclaratorId><Symbol type="Identifier">tokenType</Symbol></VariableDeclaratorId> <Symbol type="ASSIGN">=</Symbol> <VariableInitializer><Expression><Expression><Expression><Primary><Symbol type="Identifier">token</Symbol></Primary></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">getType</Symbol></Expression><Symbol type="LPAREN">(</Symbol><Symbol type="RPAREN">)</Symbol></Expression></VariableInitializer></VariableDeclarator></VariableDeclarators></LocalVariableDeclaration><Symbol type="SEMI">;</Symbol></LocalVariableDeclarationStatement></BlockStatement>
            <BlockStatement><Statement><StatementExpression><Expression><Expression><Primary><Symbol type="Identifier">tokenType</Symbol></Primary></Expression> <Symbol type="ASSIGN">=</Symbol> <Expression><Expression><Expression><Primary><Symbol type="Identifier">tokenType</Symbol></Primary></Expression> <Symbol type="LE">&lt;=</Symbol> <Expression><Primary><Literal><Symbol type="IntegerLiteral">0</Symbol></Literal></Primary></Expression></Expression> <Symbol type="QUESTION">?</Symbol> <Expression><Primary><Literal><Symbol type="IntegerLiteral">0</Symbol></Literal></Primary></Expression> <Symbol type="COLON">:</Symbol> <Expression><Primary><Symbol type="Identifier">tokenType</Symbol></Primary></Expression></Expression></Expression></StatementExpression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
            <BlockStatement><Statement><StatementExpression><Expression><Expression><Expression><Primary><Symbol type="Identifier">atts</Symbol></Primary></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">addAttribute</Symbol></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">""</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Literal><Symbol type="StringLiteral">"type"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Literal><Symbol type="StringLiteral">"type"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Literal><Symbol type="StringLiteral">""</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Expression><Expression><Primary><Symbol type="Identifier">JavaLexer</Symbol></Primary></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">tokenTypes</Symbol></Expression><Symbol type="LBRACK">[</Symbol><Expression><Primary><Symbol type="Identifier">tokenType</Symbol></Primary></Expression><Symbol type="RBRACK">]</Symbol></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression></StatementExpression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
            <BlockStatement><Statement><StatementExpression><Expression><Expression><Expression><Primary><Symbol type="Identifier">contentHandler</Symbol></Primary></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">startElement</Symbol></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">""</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">elementName</Symbol></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">elementName</Symbol></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">atts</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression></StatementExpression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
            <BlockStatement><Statement><StatementExpression><Expression><Expression><Expression><Primary><Symbol type="Identifier">contentHandler</Symbol></Primary></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">characters</Symbol></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Expression><Expression><Primary><Symbol type="Identifier">tokenText</Symbol></Primary></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">toCharArray</Symbol></Expression><Symbol type="LPAREN">(</Symbol><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Literal><Symbol type="IntegerLiteral">0</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Expression><Expression><Primary><Symbol type="Identifier">tokenText</Symbol></Primary></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">length</Symbol></Expression><Symbol type="LPAREN">(</Symbol><Symbol type="RPAREN">)</Symbol></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression></StatementExpression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
            <BlockStatement><Statement><StatementExpression><Expression><Expression><Expression><Primary><Symbol type="Identifier">contentHandler</Symbol></Primary></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">endElement</Symbol></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">""</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">elementName</Symbol></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">elementName</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression></StatementExpression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
        <Symbol type="RBRACE">}</Symbol></Block> <CatchClause><Symbol type="CATCH">catch</Symbol> <Symbol type="LPAREN">(</Symbol><CatchType><QualifiedName><Symbol type="Identifier">SAXException</Symbol></QualifiedName></CatchType> <Symbol type="Identifier">ex</Symbol><Symbol type="RPAREN">)</Symbol> <Block><Symbol type="LBRACE">{</Symbol>
            <BlockStatement><Statement><StatementExpression><Expression><Expression><Expression><Expression><Expression><Primary><Symbol type="Identifier">Logger</Symbol></Primary></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">getLogger</Symbol></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Expression><Expression><Primary><Type><ClassOrInterfaceType><Symbol type="Identifier">XmlEmittingVisitor</Symbol></ClassOrInterfaceType></Type><Symbol type="DOT">.</Symbol><Symbol type="CLASS">class</Symbol></Primary></Expression>
                    <Symbol type="DOT">.</Symbol><Symbol type="Identifier">getName</Symbol></Expression><Symbol type="LPAREN">(</Symbol><Symbol type="RPAREN">)</Symbol></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">log</Symbol></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Expression><Primary><Symbol type="Identifier">Level</Symbol></Primary></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">SEVERE</Symbol></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Literal><Symbol type="NullLiteral">null</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ex</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression></StatementExpression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
            <BlockStatement><Statement><Symbol type="THROW">throw</Symbol> <Expression><Symbol type="NEW">new</Symbol> <Creator><CreatedName><Symbol type="Identifier">RuntimeException</Symbol></CreatedName><ClassCreatorRest><Arguments><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Symbol type="Identifier">ex</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Arguments></ClassCreatorRest></Creator></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
        <Symbol type="RBRACE">}</Symbol></Block></CatchClause></Statement></BlockStatement>
        <BlockStatement><Statement><StatementExpression><Expression><Expression><Primary><Symbol type="Identifier">cursor</Symbol></Primary></Expression> <Symbol type="ASSIGN">=</Symbol> <Expression><Primary><Symbol type="Identifier">tokenIndex</Symbol></Primary></Expression></Expression></StatementExpression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitTerminal</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">TerminalNode</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">node</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><LocalVariableDeclarationStatement><LocalVariableDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Token</Symbol></ClassOrInterfaceType></Type> <VariableDeclarators><VariableDeclarator><VariableDeclaratorId><Symbol type="Identifier">symbol</Symbol></VariableDeclaratorId> <Symbol type="ASSIGN">=</Symbol> <VariableInitializer><Expression><Expression><Expression><Primary><Symbol type="Identifier">node</Symbol></Primary></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">getSymbol</Symbol></Expression><Symbol type="LPAREN">(</Symbol><Symbol type="RPAREN">)</Symbol></Expression></VariableInitializer></VariableDeclarator></VariableDeclarators></LocalVariableDeclaration><Symbol type="SEMI">;</Symbol></LocalVariableDeclarationStatement></BlockStatement>
        <BlockStatement><LocalVariableDeclarationStatement><LocalVariableDeclaration><Type><PrimitiveType><Symbol type="INT">int</Symbol></PrimitiveType></Type> <VariableDeclarators><VariableDeclarator><VariableDeclaratorId><Symbol type="Identifier">tokenIndex</Symbol></VariableDeclaratorId> <Symbol type="ASSIGN">=</Symbol> <VariableInitializer><Expression><Expression><Expression><Primary><Symbol type="Identifier">symbol</Symbol></Primary></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">getTokenIndex</Symbol></Expression><Symbol type="LPAREN">(</Symbol><Symbol type="RPAREN">)</Symbol></Expression></VariableInitializer></VariableDeclarator></VariableDeclarators></LocalVariableDeclaration><Symbol type="SEMI">;</Symbol></LocalVariableDeclarationStatement></BlockStatement>
        <BlockStatement><Statement><StatementExpression><Expression><Expression><Primary><Symbol type="Identifier">emitComments</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Symbol type="Identifier">tokenIndex</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression></StatementExpression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
        <BlockStatement><LocalVariableDeclarationStatement><LocalVariableDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">TokenSource</Symbol></ClassOrInterfaceType></Type> <VariableDeclarators><VariableDeclarator><VariableDeclaratorId><Symbol type="Identifier">tokenSource</Symbol></VariableDeclaratorId> <Symbol type="ASSIGN">=</Symbol> <VariableInitializer><Expression><Expression><Expression><Primary><Symbol type="Identifier">symbol</Symbol></Primary></Expression><Symbol type="DOT">.</Symbol><Symbol type="Identifier">getTokenSource</Symbol></Expression><Symbol type="LPAREN">(</Symbol><Symbol type="RPAREN">)</Symbol></Expression></VariableInitializer></VariableDeclarator></VariableDeclarators></LocalVariableDeclaration><Symbol type="SEMI">;</Symbol></LocalVariableDeclarationStatement></BlockStatement>
        <BlockStatement><Statement><StatementExpression><Expression><Expression><Primary><Symbol type="Identifier">emitToken</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"Symbol"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">symbol</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression></StatementExpression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Primary><Literal><Symbol type="NullLiteral">null</Symbol></Literal></Primary></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitMemberDeclaration</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">MemberDeclarationContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"MemberDeclaration"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitDefaultValue</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">DefaultValueContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"DefaultValue"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitAnnotationTypeElementDeclaration</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">AnnotationTypeElementDeclarationContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"AnnotationTypeElementDeclaration"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitType</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">TypeContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"Type"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitAnnotationTypeBody</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">AnnotationTypeBodyContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"AnnotationTypeBody"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitGenericInterfaceMethodDeclaration</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">GenericInterfaceMethodDeclarationContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"GenericInterfaceMethodDeclaration"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitClassBodyDeclaration</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">ClassBodyDeclarationContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"ClassBodyDeclaration"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitBlock</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">BlockContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"Block"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitEnumBodyDeclarations</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">EnumBodyDeclarationsContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"EnumBodyDeclarations"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitForUpdate</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">ForUpdateContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"ForUpdate"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitEnhancedForControl</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">EnhancedForControlContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"EnhancedForControl"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitAnnotationConstantRest</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">AnnotationConstantRestContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"AnnotationConstantRest"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitExplicitGenericInvocation</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">ExplicitGenericInvocationContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"ExplicitGenericInvocation"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitNonWildcardTypeArgumentsOrDiamond</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">NonWildcardTypeArgumentsOrDiamondContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"NonWildcardTypeArgumentsOrDiamond"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitExpressionList</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">ExpressionListContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"ExpressionList"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitAnnotationTypeElementRest</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">AnnotationTypeElementRestContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"AnnotationTypeElementRest"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitClassOrInterfaceType</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">ClassOrInterfaceTypeContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"ClassOrInterfaceType"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitTypeBound</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">TypeBoundContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"TypeBound"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitVariableDeclaratorId</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">VariableDeclaratorIdContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"VariableDeclaratorId"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitPrimary</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">PrimaryContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"Primary"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitClassCreatorRest</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">ClassCreatorRestContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"ClassCreatorRest"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitInterfaceBodyDeclaration</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">InterfaceBodyDeclarationContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"InterfaceBodyDeclaration"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitTypeArguments</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">TypeArgumentsContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"TypeArguments"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitAnnotationName</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">AnnotationNameContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"AnnotationName"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitFinallyBlock</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">FinallyBlockContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"FinallyBlock"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitTypeParameters</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">TypeParametersContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"TypeParameters"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitLastFormalParameter</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">LastFormalParameterContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"LastFormalParameter"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitConstructorBody</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">ConstructorBodyContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"ConstructorBody"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitLiteral</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">LiteralContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"Literal"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitAnnotationMethodOrConstantRest</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">AnnotationMethodOrConstantRestContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"AnnotationMethodOrConstantRest"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitCatchClause</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">CatchClauseContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"CatchClause"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitVariableDeclarator</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">VariableDeclaratorContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"VariableDeclarator"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitTypeList</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">TypeListContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"TypeList"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitEnumConstants</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">EnumConstantsContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"EnumConstants"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitClassBody</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">ClassBodyContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"ClassBody"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitCreatedName</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">CreatedNameContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"CreatedName"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitEnumDeclaration</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">EnumDeclarationContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"EnumDeclaration"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitFormalParameter</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">FormalParameterContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"FormalParameter"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitParExpression</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">ParExpressionContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"ParExpression"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitAnnotation</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">AnnotationContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"Annotation"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitVariableInitializer</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">VariableInitializerContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"VariableInitializer"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitElementValueArrayInitializer</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">ElementValueArrayInitializerContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"ElementValueArrayInitializer"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitCreator</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">CreatorContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"Creator"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitArrayCreatorRest</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">ArrayCreatorRestContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"ArrayCreatorRest"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitExpression</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">ExpressionContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"Expression"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitConstantExpression</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">ConstantExpressionContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"ConstantExpression"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitQualifiedNameList</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">QualifiedNameListContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"QualifiedNameList"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitConstructorDeclaration</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">ConstructorDeclarationContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"ConstructorDeclaration"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitForControl</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">ForControlContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"ForControl"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitSuperSuffix</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">SuperSuffixContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"SuperSuffix"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitVariableDeclarators</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">VariableDeclaratorsContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"VariableDeclarators"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitCatchType</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">CatchTypeContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"CatchType"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitClassOrInterfaceModifier</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">ClassOrInterfaceModifierContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"ClassOrInterfaceModifier"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitEnumConstantName</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">EnumConstantNameContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"EnumConstantName"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitModifier</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">ModifierContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"Modifier"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitInnerCreator</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">InnerCreatorContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"InnerCreator"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitExplicitGenericInvocationSuffix</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">ExplicitGenericInvocationSuffixContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"ExplicitGenericInvocationSuffix"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitVariableModifier</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">VariableModifierContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"VariableModifier"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitElementValuePair</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">ElementValuePairContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"ElementValuePair"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitArrayInitializer</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">ArrayInitializerContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"ArrayInitializer"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitElementValue</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">ElementValueContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"ElementValue"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitConstDeclaration</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">ConstDeclarationContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"ConstDeclaration"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitResource</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">ResourceContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"Resource"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitQualifiedName</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">QualifiedNameContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"QualifiedName"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitResourceSpecification</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">ResourceSpecificationContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"ResourceSpecification"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitFormalParameterList</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">FormalParameterListContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"FormalParameterList"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitAnnotationTypeDeclaration</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">AnnotationTypeDeclarationContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"AnnotationTypeDeclaration"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitAnnotationMethodRest</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">AnnotationMethodRestContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"AnnotationMethodRest"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitSwitchBlockStatementGroup</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">SwitchBlockStatementGroupContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"SwitchBlockStatementGroup"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitTypeParameter</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">TypeParameterContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"TypeParameter"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitInterfaceBody</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">InterfaceBodyContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"InterfaceBody"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitMethodDeclaration</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">MethodDeclarationContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"MethodDeclaration"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitMethodBody</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">MethodBodyContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"MethodBody"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitTypeArgument</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">TypeArgumentContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"TypeArgument"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitTypeDeclaration</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">TypeDeclarationContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"TypeDeclaration"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitGenericConstructorDeclaration</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">GenericConstructorDeclarationContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"GenericConstructorDeclaration"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitClassDeclaration</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">ClassDeclarationContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"ClassDeclaration"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitEnumConstant</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">EnumConstantContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"EnumConstant"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitStatement</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">StatementContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"Statement"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitImportDeclaration</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">ImportDeclarationContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"ImportDeclaration"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitPrimitiveType</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">PrimitiveTypeContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"PrimitiveType"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitInterfaceDeclaration</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">InterfaceDeclarationContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"InterfaceDeclaration"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitLocalVariableDeclarationStatement</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">LocalVariableDeclarationStatementContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"LocalVariableDeclarationStatement"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitBlockStatement</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">BlockStatementContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"BlockStatement"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitFieldDeclaration</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">FieldDeclarationContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"FieldDeclaration"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitConstantDeclarator</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">ConstantDeclaratorContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"ConstantDeclarator"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitResources</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">ResourcesContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"Resources"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitStatementExpression</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">StatementExpressionContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"StatementExpression"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitInterfaceMethodDeclaration</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">InterfaceMethodDeclarationContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"InterfaceMethodDeclaration"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitPackageDeclaration</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">PackageDeclarationContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"PackageDeclaration"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitElementValuePairs</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">ElementValuePairsContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"ElementValuePairs"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitLocalVariableDeclaration</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">LocalVariableDeclarationContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"LocalVariableDeclaration"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitNonWildcardTypeArguments</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">NonWildcardTypeArgumentsContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"NonWildcardTypeArguments"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitInterfaceMemberDeclaration</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">InterfaceMemberDeclarationContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"InterfaceMemberDeclaration"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitSwitchLabel</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">SwitchLabelContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"SwitchLabel"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitForInit</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">ForInitContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"ForInit"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitFormalParameters</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">FormalParametersContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"FormalParameters"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitArguments</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">ArgumentsContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"Arguments"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitGenericMethodDeclaration</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">GenericMethodDeclarationContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"GenericMethodDeclaration"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitTypeArgumentsOrDiamond</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">TypeArgumentsOrDiamondContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"TypeArgumentsOrDiamond"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>

    <ClassBodyDeclaration><Modifier><ClassOrInterfaceModifier><Annotation><Symbol type="AT">@</Symbol><AnnotationName><QualifiedName><Symbol type="Identifier">Override</Symbol></QualifiedName></AnnotationName></Annotation></ClassOrInterfaceModifier></Modifier>
    <Modifier><ClassOrInterfaceModifier><Symbol type="PUBLIC">public</Symbol></ClassOrInterfaceModifier></Modifier> <MemberDeclaration><MethodDeclaration><Type><ClassOrInterfaceType><Symbol type="Identifier">Object</Symbol></ClassOrInterfaceType></Type> <Symbol type="Identifier">visitCompilationUnit</Symbol><FormalParameters><Symbol type="LPAREN">(</Symbol><FormalParameterList><FormalParameter><Type><ClassOrInterfaceType><Symbol type="Identifier">JavaParser</Symbol><Symbol type="DOT">.</Symbol><Symbol type="Identifier">CompilationUnitContext</Symbol></ClassOrInterfaceType></Type> <VariableDeclaratorId><Symbol type="Identifier">ctx</Symbol></VariableDeclaratorId></FormalParameter></FormalParameterList><Symbol type="RPAREN">)</Symbol></FormalParameters> <MethodBody><Block><Symbol type="LBRACE">{</Symbol>
        <BlockStatement><Statement><Symbol type="RETURN">return</Symbol> <Expression><Expression><Primary><Symbol type="Identifier">emitXmlElement</Symbol></Primary></Expression><Symbol type="LPAREN">(</Symbol><ExpressionList><Expression><Primary><Literal><Symbol type="StringLiteral">"CompilationUnit"</Symbol></Literal></Primary></Expression><Symbol type="COMMA">,</Symbol> <Expression><Primary><Symbol type="Identifier">ctx</Symbol></Primary></Expression></ExpressionList><Symbol type="RPAREN">)</Symbol></Expression><Symbol type="SEMI">;</Symbol></Statement></BlockStatement>
    <Symbol type="RBRACE">}</Symbol></Block></MethodBody></MethodDeclaration></MemberDeclaration></ClassBodyDeclaration>
<Symbol type="RBRACE">}</Symbol></ClassBody></ClassDeclaration></TypeDeclaration>
<Symbol type="HIDDEN">&lt;EOF&gt;</Symbol></CompilationUnit>